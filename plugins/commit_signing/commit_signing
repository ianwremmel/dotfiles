#!/usr/bin/env bash

export DOTFILES_COMMIT_SIGNING_DEPS=('homebrew' 'homedir')

_dotfiles_commit_signing_ensure () {
  if ! command -v gpg > /dev/null 2>&1; then
    echo 'The commit signing plugin requires gpg. Please add it to your Brewfile'
    return 1
  fi

  if ! command -v pinentry-mac > /dev/null 2>&1; then
    echo 'The commit signing plugin requires pinentry-mac. Please add it to your Brewfile'
    return 1
  fi
}

dotfiles_commit_signing_apply () {
  mkdir -p "$HOME/.gnupg"
  chmod 0700 "$HOME/.gnupg"

  local key_id
  key_id=$(gpg --list-secret-keys --keyid-format LONG | awk '/sec/ { print $2 }' | awk -F'/' '{ print $2 }')

  if [ "$key_id" != '' ]; then
    touch "$HOME/.gnupg/gpg-agent.conf"
    # At one time, this program mistakenly created the gpg config file in the
    # root of the home directory
    rm -f "$HOME/gpg-agent.conf"


    if ! grep -q 'pinentry-program' "$HOME/.gnupg/gpg-agent.conf"; then
      echo 'pinentry-program /opt/homebrew/bin/pinentry-mac' >> "$HOME/.gnupg/gpg-agent.conf"
    fi

    git config --global user.signingkey "$key_id"
    git config --global commit.gpgsign true
    gpgconf --kill gpg-agent
  else
    echo 'gpg does not appear to contain any secret keys. skipping commit-signing setup'
    remind 'Add a gpg key to gpgagent and rerun dotfiles'
  fi
}
